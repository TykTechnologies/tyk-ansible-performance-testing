{
  "name": "posts-subgraph",
  "api_id": "3",
  "org_id": "default",
  "active": true,
  "auth": {},
  "use_keyless": true,
  "version_data": {
    "not_versioned": true,
    "versions": {
      "Default": {
        "name": "Default",
        "expires": "3000-01-02 15:04",
        "use_extended_paths": true,
        "extended_paths": {
          "ignored": [],
          "white_list": [],
          "black_list": []
        }
      }
    }
  },
{% if 'saas' in ansible_run_tags %}
  "tags": [
    "edge"
  ],
{% endif %}
  "internal": true,
  "proxy": {
    "target_url": "http://{% if 'saas' in ansible_run_tags %}{{ hostvars.upstream.ansible_host }}{% else %}{{ hostvars.upstream.ansible_facts.default_ipv4.address }}{% endif %}:{{ services.upstream.services.posts.port }}/query",
    "strip_listen_path": true,
    "enable_load_balancing": false,
    "listen_path": "/posts-subgraph/",
    "disable_strip_slash": true
  },
  "enable_batch_request_support": true,
  "disable_quota": true,
  "disable_rate_limit": true,
  "graphql": {
    "schema": "directive @extends on OBJECT | INTERFACE\n\ndirective @external on FIELD_DEFINITION\n\ndirective @key(fields: _FieldSet!) on OBJECT | INTERFACE\n\ndirective @provides(fields: _FieldSet!) on FIELD_DEFINITION\n\ndirective @requires(fields: _FieldSet!) on FIELD_DEFINITION\n\nscalar _Any\n\nunion _Entity = Post | User\n\nscalar _FieldSet\n\ntype _Service {\n  sdl: String\n}\n\ntype Entity {\n  findPostByID(id: ID!): Post!\n  findUserByID(id: ID!): User!\n}\n\ntype Post {\n  id: ID!\n  userId: ID!\n  title: String!\n  body: String!\n}\n\ntype Query {\n  post(id: ID!): Post!\n  posts: [Post!]!\n  _entities(representations: [_Any!]!): [_Entity]!\n  _service: _Service!\n}\n\ntype User {\n  id: ID!\n  posts: [Post]\n}\n",
    "enabled": true,
    "engine": {
      "field_configs": [],
      "data_sources": []
    },
    "type_field_configurations": [],
    "execution_mode": "subgraph",
    "proxy": {
      "auth_headers": {}
    },
    "subgraph": {
      "sdl": "extend type Query {\n    post(id: ID!): Post!\n    posts: [Post!]!\n}\n\ntype Post @key(fields: \"id\") {\n    id: ID!\n    userId: ID!\n    title: String!\n    body: String!\n}\n\nextend type User @key(fields: \"id\") {\n    id: ID! @external\n    posts: [Post]\n}\n"
    },
    "supergraph": {
      "subgraphs": [
        {
          "api_id": "",
          "name": "",
          "url": "",
          "sdl": ""
        }
      ],
      "merged_sdl": "",
      "global_headers": {}
    },
    "version": "2",
    "playground": {
      "enabled": false,
      "path": ""
    },
    "last_schema_update": "2022-02-10T15:57:33.98Z"
  },
  "cache_options": {
    "enable_cache": false,
    "cache_all_safe_requests": false
  }
}
