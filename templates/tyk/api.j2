{
  "name": "Tyk Test API",
  "api_id": "1",
  "org_id": "default",
  "active": true,
  "global_rate_limit": {
    "rate": 100000,
    "per": 1
  },
{% if enable_auth %}
  "definition": {
    "location": "header",
    "key": "version"
  },
  "auth": {
    "auth_header_name": "authorization"
  },
{% else %}
  "auth": {},
  "use_keyless": true,
{% endif %}
  "version_data": {
    "not_versioned": true,
    "versions": {
      "Default": {
        "name": "Default",
        "expires": "3000-01-02 15:04",
        "use_extended_paths": true,
        "extended_paths": {
          "ignored": [],
          "white_list": [],
          "black_list": []
        }
      }
    }
  },
{% if 'saas' in ansible_run_tags %}
  "tags": [
    "edge"
  ],
{% endif %}
  "proxy": {
    "listen_path": "/api/",
    "target_url": "{% if query_type == 'REST' %}http://{% if 'saas' in ansible_run_tags %}{{ hostvars.upstream.ansible_host }}{% else %}{{ hostvars.upstream.ansible_facts.default_ipv4.address }}{% endif %}:{{ services.upstream.service.port }}{% endif %}",
    "strip_listen_path": true
  },
  "enable_batch_request_support": true,
  "disable_quota": {{ (not(enable_quota | bool)) | lower }},
  "disable_rate_limit": {{ (not(enable_rate_limiting | bool)) | lower }},
{% if query_type == 'STITCH' %}
  "graphql": {
    "schema": "type Comment {\n  id: ID\n  postId: String\n  name: String\n  email: String\n  body: String\n}\n\ntype Post {\n  id: ID\n  userId: ID\n  title: String\n  body: String\n  comments: [Comment]\n}\n\ntype Query {\n  user(id: ID!): User\n}\n\ntype User {\n  id: ID\n  name: String\n  email: String\n  username: String\n  posts: [Post]\n}\n",
    "enabled": true,
    "engine": {
      "field_configs": [
        {
          "type_name": "Query",
          "field_name": "user",
          "disable_default_mapping": true,
          "path": [
            ""
          ]
        },
        {
          "type_name": "User",
          "field_name": "posts",
          "disable_default_mapping": true,
          "path": [
            ""
          ]
        },
        {
          "type_name": "Post",
          "field_name": "comments",
          "disable_default_mapping": true,
          "path": [
            ""
          ]
        }
      ],
      "data_sources": [
        {
          "kind": "REST",
          "name": "users",
          "internal": false,
          "root_fields": [
            {
              "type": "Query",
              "fields": [
                "user"
              ]
            }
          ],
          "config": {
            "url": "http://{% if 'saas' in ansible_run_tags %}{{ hostvars.upstream.ansible_host }}{% else %}{{ hostvars.upstream.ansible_facts.default_ipv4.address }}{% endif %}:{{ services.upstream.service.port }}/users/{% raw %}{{.arguments.id}}{% endraw %}",
            "method": "GET",
            "body": "",
            "headers": {},
            "default_type_name": "User"
          }
        },
        {
          "kind": "REST",
          "name": "user-posts",
          "internal": false,
          "root_fields": [
            {
              "type": "User",
              "fields": [
                "posts"
              ]
            }
          ],
          "config": {
            "url": "http://{% if 'saas' in ansible_run_tags %}{{ hostvars.upstream.ansible_host }}{% else %}{{ hostvars.upstream.ansible_facts.default_ipv4.address }}{% endif %}:{{ services.upstream.service.port }}/users/{% raw %}{{.object.id}}{% endraw %}/posts",
            "method": "GET",
            "body": "",
            "headers": {},
            "default_type_name": "Post"
          }
        },
        {
          "kind": "REST",
          "name": "posts-comments",
          "internal": false,
          "root_fields": [
            {
              "type": "Post",
              "fields": [
                "comments"
              ]
            }
          ],
          "config": {
            "url": "http://{% if 'saas' in ansible_run_tags %}{{ hostvars.upstream.ansible_host }}{% else %}{{ hostvars.upstream.ansible_facts.default_ipv4.address }}{% endif %}:{{ services.upstream.service.port }}/posts/{% raw %}{{.object.id}}{% endraw %}/comments",
            "method": "GET",
            "body": "",
            "headers": {},
            "default_type_name": "Comment"
          }
        }
      ]
    },
    "type_field_configurations": [],
    "execution_mode": "executionEngine",
    "proxy": {
      "auth_headers": {}
    },
    "subgraph": {
      "sdl": ""
    },
    "supergraph": {
      "subgraphs": [],
      "merged_sdl": "",
      "global_headers": {}
    },
    "version": "2",
    "playground": {
      "enabled": false,
      "path": ""
    },
    "last_schema_update": "2021-12-30T16:27:26.291Z"
  },
{% elif query_type == 'FEDERATE' %}
  "graphql": {
    "schema": "type Query {\n  user(id: ID!): User!\n  users: [User!]!\n  comment(id: ID!): Comment!\n  comments: [Comment!]!\n  post(id: ID!): Post!\n  posts: [Post!]!\n}\n\ntype User {\n  id: ID!\n  name: String!\n  username: String!\n  email: String!\n  address: Address!\n  phone: String!\n  website: String!\n  company: Company!\n  posts: [Post]\n}\n\ntype Address {\n  street: String!\n  suite: String!\n  city: String!\n  zipcode: String!\n  geo: GeoLocation!\n}\n\ntype GeoLocation {\n  lat: String!\n  lng: String!\n}\n\ntype Company {\n  name: String!\n  catchPhrase: String!\n  bs: String!\n}\n\ntype Comment {\n  id: ID!\n  postId: ID!\n  name: String!\n  email: String!\n  body: String!\n}\n\ntype Post {\n  id: ID!\n  userId: ID!\n  title: String!\n  body: String!\n  comments: [Comment]\n}",
    "enabled": true,
    "engine": {
      "field_configs": [],
      "data_sources": []
    },
    "type_field_configurations": [],
    "execution_mode": "supergraph",
    "proxy": {
      "auth_headers": {}
    },
    "subgraph": {
      "sdl": ""
    },
    "supergraph": {
      "updated_at": "2022-02-10T21:03:39.511Z",
      "subgraphs": [
        {
          "api_id": "2",
          "name": "users-subgraph",
          "url": "tyk://users-subgraph",
          "sdl": "extend type Query {\n    user(id: ID!): User!\n    users: [User!]!\n}\n\ntype User @key(fields: \"id\") {\n    id: ID!\n    name: String!\n    username: String!\n    email: String!\n    address: Address!\n    phone: String!\n    website: String!\n    company: Company!\n}\n\ntype Address {\n    street: String!\n    suite: String!\n    city: String!\n    zipcode: String!\n    geo: GeoLocation!\n}\n\ntype GeoLocation {\n    lat: String!\n    lng: String!\n}\n\ntype Company {\n    name: String!\n    catchPhrase: String!\n    bs: String!\n}\n"
        },
        {
          "api_id": "3",
          "name": "comments-subgraph",
          "url": "tyk://comments-subgraph",
          "sdl": "extend type Query {\n    comment(id: ID!): Comment!\n    comments: [Comment!]!\n}\n\ntype Comment @key(fields: \"id\") {\n    id: ID!\n    postId: ID!\n    name: String!\n    email: String!\n    body: String!\n}\n\nextend type Post @key(fields: \"id\") {\n    id: ID! @external\n    comments: [Comment]\n}\n"
        },
        {
          "api_id": "4",
          "name": "posts-subgraph",
          "url": "tyk://posts-subgraph",
          "sdl": "extend type Query {\n    post(id: ID!): Post!\n    posts: [Post!]!\n}\n\ntype Post @key(fields: \"id\") {\n    id: ID!\n    userId: ID!\n    title: String!\n    body: String!\n}\n\nextend type User @key(fields: \"id\") {\n    id: ID! @external\n    posts: [Post]\n}\n"
        }
      ],
      "merged_sdl": "type Query {\n  user(id: ID!): User!\n  users: [User!]!\n  comment(id: ID!): Comment!\n  comments: [Comment!]!\n  post(id: ID!): Post!\n  posts: [Post!]!\n}\n\ntype User {\n  id: ID!\n  name: String!\n  username: String!\n  email: String!\n  address: Address!\n  phone: String!\n  website: String!\n  company: Company!\n  posts: [Post]\n}\n\ntype Address {\n  street: String!\n  suite: String!\n  city: String!\n  zipcode: String!\n  geo: GeoLocation!\n}\n\ntype GeoLocation {\n  lat: String!\n  lng: String!\n}\n\ntype Company {\n  name: String!\n  catchPhrase: String!\n  bs: String!\n}\n\ntype Comment {\n  id: ID!\n  postId: ID!\n  name: String!\n  email: String!\n  body: String!\n}\n\ntype Post {\n  id: ID!\n  userId: ID!\n  title: String!\n  body: String!\n  comments: [Comment]\n}",
      "global_headers": {}
    },
    "version": "2",
    "playground": {
      "enabled": false,
      "path": ""
    },
    "last_schema_update": "2022-02-10T21:03:39.511Z"
  },
{% endif %}
  "cache_options": {
    "enable_cache": false,
    "cache_all_safe_requests": false
  }
}
