---
# Allows gathering of ansible_facts to discover the internal IPs of the
# servers as well as await until machines are up.
- hosts: all
  tasks:
  - name: Collect ansible_facts to discover internal IPs
    debug:
      msg: Discovering internal IP...
    register: discoverable
    until: discoverable is not failed
    retries: 10
    delay: 30

# Update packages on all servers.
- hosts: all
  become: True
  tasks:
  - name: Update packages
    package:
      name: "*"
      state: latest
      update_cache: yes
  tags:
    - install

# Install docker on all servers.
- hosts: all
  gather_facts: false
  become: True
  vars:
    pip_install_packages:
      - name: docker
  roles:
    - geerlingguy.pip
    - geerlingguy.docker
  tags:
    - install

# Install htop on all servers (Optional)
- hosts: all
  gather_facts: false
  become: True
  roles:
    - htop
  tags:
    - htop

# Stand up upstream services.
- hosts: upstream
  gather_facts: false
  become: True
  vars_files:
    - ./vars/tests.yml
    - ./vars/services.yml
  roles:
    - upstream
  tags:
    - standup

# Benchmark upstream service
- hosts: load-generator
  gather_facts: false
  become: True
  vars_files:
    - ./vars/tests.yml
    - ./vars/services.yml
  tasks:
    - name: Include load-generator role
      vars:
        label: upstream
      include_role:
        name: load-generator
      when: (query_type == 'REST') and ('upstream' in test_services)
  tags:
    - test

# Stand up Tyk gateway dependencies
- hosts: tyk_dependencies
  gather_facts: false
  become: True
  tasks:
    - name: Include tyk-dependencies role
      include_role:
        name: tyk-dependencies
      when: ('kong' in test_services) and (not ('saas' in ansible_run_tags))
  tags:
    - install

# Stand up Tyk gateway
- hosts: "{% if 'saas' in ansible_run_tags %}localhost{% else %}tyk{% endif %}"
  gather_facts: false
  become: True
  vars_files:
    - ./vars/tests.yml
    - ./vars/services.yml
  tasks:
    - name: Include tyk role
      include_role:
        name: tyk
      when: ('tyk' in test_services)
  tags:
    - install
    - standup

# Benchmark Tyk gateway
- hosts: load-generator
  gather_facts: false
  become: True
  vars_files:
    - ./vars/tests.yml
    - ./vars/services.yml
  tasks:
    - name: Include load-generator role
      vars:
        label: "{% if 'saas' in ansible_run_tags %}saas-{% endif %}tyk"
      include_role:
        name: load-generator
      when: ('tyk' in test_services)
  tags:
    - test

# Stand up Kong dependencies gateway
- hosts: kong_dependencies
  gather_facts: false
  become: True
  tasks:
    - name: Include kong role
      include_role:
        name: kong_dependencies
      when: (query_type == 'REST') and ('kong' in test_services)
  tags:
    - standup

# Stand up Kong gateway
- hosts: kong
  gather_facts: false
  become: True
  vars_files:
    - ./vars/tests.yml
    - ./vars/services.yml
  tasks:
    - name: Include kong role
      include_role:
        name: kong
      when: (query_type == 'REST') and ('kong' in test_services)
  tags:
    - standup

# Benchmark Kong gateway
- hosts: load-generator
  gather_facts: false
  become: True
  vars_files:
    - ./vars/tests.yml
    - ./vars/services.yml
  tasks:
    - name: Include load-generator role
      vars:
        label: kong
      include_role:
        name: load-generator
      when: (query_type == 'REST') and ('kong' in test_services)
  tags:
    - test

# Stand up Apollo server
- hosts: apollo
  gather_facts: false
  become: True
  vars_files:
    - ./vars/tests.yml
    - ./vars/services.yml
  tasks:
    - name: Include apollo-server role
      include_role:
        name: apollo-server
      when: (query_type != 'REST') and ('apollo' in test_services)
  tags:
    - install
    - standup

# Benchmark Apollo server
- hosts: load-generator
  gather_facts: false
  become: True
  vars_files:
    - ./vars/tests.yml
    - ./vars/services.yml
  tasks:
    - name: Include load-generator role
      vars:
        label: apollo
      include_role:
        name: load-generator
      when: (query_type != 'REST') and ('apollo' in test_services)
  tags:
    - test

# Clean up upstream services
- hosts: upstream
  gather_facts: false
  become: True
  vars_files:
    - ./vars/tests.yml
  roles:
    - upstream
  tags:
    - cleanup

# Clean up Tyk gateway services
- hosts: tyk
  gather_facts: false
  become: True
  tasks:
    - name: Include tyk role
      include_role:
        name: tyk
      when: ('tyk' in test_services) and (not ('saas' in ansible_run_tags))
  tags:
    - cleanup

# Clean up Kong gateway services
- hosts: kong
  gather_facts: false
  become: True
  vars_files:
    - ./vars/tests.yml
  tasks:
    - name: Include kong role
      include_role:
        name: kong
      when: (query_type == 'REST') and ('kong' in test_services)
  tags:
    - cleanup

# Clean up Apollo services
- hosts: apollo
  gather_facts: false
  become: True
  vars_files:
    - ./vars/tests.yml
  tasks:
    - name: Include apollo-server role
      include_role:
        name: apollo-server
      when: (query_type != 'REST') and ('apollo' in test_services)
  tags:
    - cleanup
