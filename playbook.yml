---
- hosts: all
  tasks:
  - name: Collect ansible_facts to discover internal IPs
    debug:
      var: ansible_facts
  tags:
    - standup
    - test

- hosts: all
  become: True
  vars:
    pip_install_packages:
      - name: docker
  roles:
    - htop
    - geerlingguy.pip
    - geerlingguy.docker
  tags:
    - install

- hosts: upstream
  become: True
  vars_files:
    - ./vars/tests.yml
    - ./vars/upstream.yml
  roles:
    - upstream
  tags:
    - standup

- hosts: load-generator
  become: True
  vars_files:
    - ./vars/tests.yml
    - ./vars/upstream.yml
  tasks:
    - name: Include load-generator role
      vars:
        label: upstream
        host_ip: "{{ hostvars.upstream.ansible_facts.default_ipv4.address }}"
        host_port: "{{ upstream.service.port }}"
        results_filename: "bench{% if limit_cores %}-cores-{{ limit_cores }}{% endif %}-upstreams.txt"
      include_role:
        name: load-generator
      when: query_type == 'REST'
  tags:
    - test

- hosts: tyk
  become: True
  vars_files:
    - ./vars/tests.yml
    - ./vars/tyk.yml
    - ./vars/upstream.yml
  roles:
    - role: tyk
      upstream_host: "{{ hostvars.upstream.ansible_facts.default_ipv4.address }}"
  tags:
    - install
    - standup

- hosts: load-generator
  become: True
  vars_files:
    - ./vars/tests.yml
    - ./vars/tyk.yml
  roles:
    - role: load-generator
      label: tyk
      host_ip: "{{ hostvars.tyk.ansible_facts.default_ipv4.address }}"
      host_port: "{{ tyk.service.port }}"
      results_filename: "bench{% if limit_cores %}-cores-{{ limit_cores }}{% endif %}-tyk-{{ query_type | lower }}{% if query_type != 'REST' %}-{{ query_depth }}{% endif %}.txt"
  tags:
    - test

- hosts: kong
  become: True
  vars_files:
    - ./vars/tests.yml
    - ./vars/kong.yml
    - ./vars/upstream.yml
  tasks:
    - name: Include kong role
      vars:
        upstream_host: "{{ hostvars.upstream.ansible_facts.default_ipv4.address }}"
      include_role:
        name: kong
      when: query_type == 'REST'
  tags:
    - standup

- hosts: load-generator
  become: True
  vars_files:
    - ./vars/tests.yml
    - ./vars/kong.yml
  tasks:
    - name: Include load-generator role
      vars:
        label: kong
        host_ip: "{{ hostvars.kong.ansible_facts.default_ipv4.address }}"
        host_port: "{{ kong.service.port }}"
        results_filename: "bench{% if limit_cores %}-cores-{{ limit_cores }}{% endif %}-kong-{{ query_type | lower }}{% if query_type != 'REST' %}-{{ query_depth }}{% endif %}.txt"
      include_role:
        name: load-generator
      when: query_type == 'REST'
  tags:
    - test

- hosts: apollo
  become: True
  vars_files:
    - ./vars/tests.yml
    - ./vars/apollo-server.yml
    - ./vars/upstream.yml
  tasks:
    - name: Include apollo-server role
      vars:
        upstream_host: "{{ hostvars.upstream.ansible_facts.default_ipv4.address }}"
      include_role:
        name: apollo-server
      when: query_type != 'REST'
  tags:
    - install
    - standup

- hosts: load-generator
  become: True
  vars_files:
    - ./vars/tests.yml
    - ./vars/apollo-server.yml
  tasks:
    - name: Include load-generator role
      vars:
        label: apollo
        host_ip: "{{ hostvars.apollo.ansible_facts.default_ipv4.address }}"
        host_port: "{{ apollo.service.port }}"
        results_filename: "bench{% if limit_cores %}-cores-{{ limit_cores }}{% endif %}-apollo-{{ query_type | lower }}{% if query_type != 'REST' %}-{{ query_depth }}{% endif %}.txt"
      include_role:
        name: load-generator
      when: query_type != 'REST'
  tags:
    - test

- hosts: upstream
  become: True
  vars_files:
    - ./vars/tests.yml
  roles:
    - upstream
  tags:
    - cleanup

- hosts: tyk
  become: True
  roles:
    - tyk
  tags:
    - cleanup

- hosts: kong
  become: True
  vars_files:
    - ./vars/tests.yml
  tasks:
    - name: Include kong role
      include_role:
        name: kong
      when: query_type == 'REST'
  tags:
    - cleanup

- hosts: apollo
  become: True
  vars_files:
    - ./vars/tests.yml
  tasks:
    - name: Include apollo-server role
      include_role:
        name: apollo-server
      when: query_type != 'REST'
  tags:
    - cleanup
