---
- name: Create Tyk network
  docker_network:
    name: tyk
  when: standup is defined and standup == true

- name: Launch Redis container
  docker_container:
    name: redis
    state: started
    image: redis:4.0-alpine
    ports:
      - "127.0.0.1:6379:6379"
    networks:
      - name: tyk
  when: standup is defined and standup == true

- name: Ensures /opt/tyk-gateway/apps dir exists
  file: path=/opt/tyk-gateway/apps state=directory
  tags:
    - standup

- name: "Copy tyk.conf"
  copy:
    src: "../files/tyk.conf"
    dest: "/opt/tyk-gateway/tyk.conf"
  when: standup is defined and standup == true

- name: "Copy api_test.json"
  copy:
    src: "../files/api_test.json"
    dest: "/opt/tyk-gateway/apps/api_test.json"
  when: standup is defined and standup == true

- name: "Copy auth_api_test.json"
  copy:
    src: "../files/auth_api_test.json"
    dest: "/opt/tyk-gateway/apps/auth_api_test.json"
  when: standup is defined and standup == true

- name: Inject use_analytics variable as a Tyk environment variable
  lineinfile:
    dest: /etc/sysconfig/tyk-gateway
    create: true
    regexp: "^TYK_GW_ENABLEANALYTICS="
    line: "TYK_GW_ENABLEANALYTICS={{ use_analytics }}"
  when: standup is defined and standup == true

- name: Remove Tyk Gateway container
  docker_container:
    name: tyk-gateway
    state: absent

- name: Launch Tyk Gateway container
  docker_container:
    name: tyk-gateway
    state: started
    image: tykio/tyk-gateway:latest
    ports:
      - "8080:8080"
    networks:
      - name: tyk
    volumes:
      - "/opt/tyk-gateway/tyk.conf:/opt/tyk-gateway/tyk.conf"
      - "/opt/tyk-gateway/apps/api_test.json:/opt/tyk-gateway/apps/api_test.json"
      - "/opt/tyk-gateway/apps/auth_api_test.json:/opt/tyk-gateway/apps/auth_api_test.json"
    ulimits: "nofile:80000:80000"
    env:
      GOGC: "1600"
    log_options:
      max-size: 10m
      max-file: 5
    etc_hosts:
      UPSTREAM_HOST: "{{ upstream_host_ip }}"
  when: standup is defined and standup == true

- name: Remove Redis container
  docker_container:
    name: redis
    state: absent
  when: cleanup is defined and cleanup == true

- name: Remove Tyk network
  docker_network:
    name: tyk
    state: absent
  when: cleanup is defined and cleanup == true
