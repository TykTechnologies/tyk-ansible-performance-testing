---
- name: Provision GCP network instance
  gcp_compute_network:
    name: "{{ gcp_machine_type }}-network"
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_auth_kind }}"
    service_account_file: "{{ gcp_service_account_file }}"
    auto_create_subnetworks: True
  register: network

- name: Provision GCP firewall instance
  gcp_compute_firewall:
    name: "{{ gcp_machine_type }}-firewall"
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_auth_kind }}"
    service_account_file: "{{ gcp_service_account_file }}"
    network: "{{ network }}"
    allowed:
      - ip_protocol: tcp
        ports:
          - "22"
          - "4000-4003"
          - "8000-8001"
          - "8080"
          - "8443-8444"

- name: Provision Upstream GCP address instance
  gcp_compute_address:
    name: "{{ gcp_machine_type }}-upstream-address"
    project: "{{ gcp_project }}"
    region: "{{ gcp_region }}"
    auth_kind: "{{ gcp_auth_kind }}"
    service_account_file: "{{ gcp_service_account_file }}"
  register: upstream_address

- name: Provision Load Generator GCP address instance
  gcp_compute_address:
    name: "{{ gcp_machine_type }}-load-address"
    project: "{{ gcp_project }}"
    region: "{{ gcp_region }}"
    auth_kind: "{{ gcp_auth_kind }}"
    service_account_file: "{{ gcp_service_account_file }}"
  register: load_address

- name: Provision Tyk GCP address instance
  gcp_compute_address:
    name: "{{ gcp_machine_type }}-tyk-address"
    project: "{{ gcp_project }}"
    region: "{{ gcp_region }}"
    auth_kind: "{{ gcp_auth_kind }}"
    service_account_file: "{{ gcp_service_account_file }}"
  register: tyk_address

- name: Provision Kong GCP address instance
  gcp_compute_address:
    name: "{{ gcp_machine_type }}-kong-address"
    project: "{{ gcp_project }}"
    region: "{{ gcp_region }}"
    auth_kind: "{{ gcp_auth_kind }}"
    service_account_file: "{{ gcp_service_account_file }}"
  register: kong_address
  when: ('kong' in test_services)

- name: Provision Apollo GCP address instance
  gcp_compute_address:
    name: "{{ gcp_machine_type }}-apollo-address"
    project: "{{ gcp_project }}"
    region: "{{ gcp_region }}"
    auth_kind: "{{ gcp_auth_kind }}"
    service_account_file: "{{ gcp_service_account_file }}"
  register: apollo_address
  when: ('apollo' in test_services)

- name: Include create_instance task to create Upstream vm
  include_tasks: create_instance.yml
  vars:
    title: Upstream
    type: upstream
    address: "{{ upstream_address }}"

- name: Include create_instance task to create Load Generator vm
  include_tasks: create_instance.yml
  vars:
    title: Load Generator
    type: load
    address: "{{ load_address }}"

- name: Include create_instance task to create Tyk vm
  include_tasks: create_instance.yml
  vars:
    title: Tyk
    type: tyk
    address: "{{ tyk_address }}"

- name: Include create_instance task to create Kong vm
  include_tasks: create_instance.yml
  vars:
    title: Kong
    type: kong
    address: "{{ kong_address }}"
  when: ('kong' in test_services)

- name: Include create_instance task to create Apollo vm
  include_tasks: create_instance.yml
  vars:
    title: Apollo
    type: apollo
    address: "{{ apollo_address }}"
  when: ('apollo' in test_services)

- name: Create {{ gcp_machine_type }}-gcp-hosts.yml
  vars:
    hosts:
      upstream: "{{ upstream_address.address }}"
      load: "{{ load_address.address }}"
      tyk: "{{ tyk_address.address }}"
      kong: "{% if 'kong' in test_services %}{{ kong_address.address }}{% endif %}"
      apollo: "{% if 'apollo' in test_services %}{{ apollo_address.address }}{% endif %}"
  template:
    src: hosts.j2
    dest: ./hosts/{{ gcp_machine_type }}-gcp-hosts.yml
